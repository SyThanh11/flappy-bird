(()=>{"use strict";const t=class{constructor(t){this.clear=()=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)},this.getCanvas=()=>this.canvas,this.getCtx=()=>this.ctx,this.canvas=document.querySelector(t),this.ctx=this.canvas.getContext("2d")}},e=class{constructor(){this.listOfGameObjects=[]}addGameObject(t){t.start(),this.listOfGameObjects.push(t)}removeGameObject(t){t.destroy(),this.listOfGameObjects.splice(this.listOfGameObjects.indexOf(t),1)}findGameObject(t){return this.listOfGameObjects.find((e=>e===t))}addListOfGameObjects(t){t.forEach((t=>{this.addGameObject(t)}))}update(t){this.listOfGameObjects.forEach((e=>{e.update(t)}))}sortLayer(){this.listOfGameObjects.sort(((t,e)=>t.getLayer()-e.getLayer()))}start(){this.listOfGameObjects.forEach((t=>{t.start()}))}draw(t,e){t.clearRect(0,0,e.width,e.height),this.sortLayer(),this.listOfGameObjects.forEach((s=>{s.draw(t,e)}))}destroy(){this.listOfGameObjects.forEach((t=>{t.destroy()}))}deleteScene(){this.destroy(),this.listOfGameObjects=[]}};class s{constructor(){this.listOfScenes=new Map,this.currentScene=new e}static getInstance(){return s.instance||(s.instance=new s),s.instance}addScene(t,e){this.listOfScenes.set(t,e)}getScene(t){return this.listOfScenes.get(t)||new e}setCurrentScene(t){this.currentScene=this.getScene(t)}getCurrentScene(){return this.currentScene}removeScene(t){this.listOfScenes.delete(t)}}const i=s,n=class{constructor(t,e){this.lastTime=0,this.deltaTime=0,this.start(t,e)}start(t,e){i.getInstance().getCurrentScene().start(),this.lastTime=window.performance.now(),window.requestAnimationFrame((()=>this.gameLoop(t,e)))}update(t){i.getInstance().getCurrentScene().update(t)}draw(t,e){i.getInstance().getCurrentScene().draw(t,e)}gameLoop(t,e){let s=window.performance.now();this.deltaTime=(s-this.lastTime)/1e3,this.update(this.deltaTime),this.draw(t,e),this.lastTime=s,window.requestAnimationFrame((()=>this.gameLoop(t,e)))}},a=class{constructor(t){this.isMouseDown=!1,this.observers=[],this.timeoutId=null,this.canvas=document.getElementById(t),this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this))}handleMouseDown(t){this.isMouseDown=!0,this.notifyObserversMouseDown(t)}handleMouseUp(t){this.isMouseDown=!1,this.notifyObserversMouseUp(t)}isMousePressed(){return this.isMouseDown}addObserver(t){this.observers.push(t)}removeObserver(t){this.observers=this.observers.filter((e=>e!==t))}notifyObserversMouseDown(t){this.observers.forEach((e=>{e.onMouseDown(t)})),console.log(),this.timeoutId&&clearTimeout(this.timeoutId)}notifyObserversMouseUp(t){this.observers.forEach((e=>{e.onMouseUp(t)})),this.timeoutId=setTimeout((()=>{this.isMouseDown=!1,this.timeoutId=null}),1e3)}};class r{constructor(t,e){this.x=t,this.y=e}getX(){return this.x}getY(){return this.y}setX(t){this.x=t}setY(t){this.y=t}add(t){return new r(this.x+t.getX(),this.y+t.getY())}subtract(t){return new r(this.x-t.getX(),this.y-t.getY())}multiplyScalar(t){return new r(this.x*t,this.y*t)}divideScalar(t){if(0===t)throw new Error("Cannot divide by zero.");return new r(this.x/t,this.y/t)}Up(){return new r(0,-1)}Down(){return new r(0,1)}Left(){return new r(-1,0)}Right(){return new r(1,0)}}const o=r,h=class{constructor(t,e,s){this.degree=Math.PI/180,this.position=t||new o(0,0),this.rotation=e||0,this.scale=s||new o(1,1)}getPosition(){return this.position}getRotation(){return this.rotation}getScale(){return this.scale}getDegree(){return this.degree}getMaxRotation(){return this.maxRotation}getRadian(){return this.rotation*this.degree}getRadianMax(){return this.maxRotation*this.degree}getRotationMax(){return this.maxRotation}setPosition(t){this.position=t}setRotation(t){this.rotation=t}setScale(t){this.scale=t}setMaxRotation(t){this.maxRotation=t}rotate(t){this.rotation+=t,this.maxRotation&&(this.rotation>this.maxRotation?this.rotation=this.maxRotation:this.rotation<-this.maxRotation&&(this.rotation=-this.maxRotation))}reset(){this.position=new o(0,0),this.rotation=0,this.scale=new o(1,1)}},d=(t,e)=>Math.floor(Math.random()*(e-t+1)+t),g={listOfGroundsInfo:{numberOfGrounds:4,groundInfo:{path:"../assets/images/base.png",position:new h,width:336,height:112,canvasPosition:new h(new o(200,398)),canvasWidth:336,canvasHeight:112,speed:100},indexStart:0},listOfBackgroundsInfo:{numberOfBackgrounds:3,backgroundInfo:{path:"../assets/images/background-night.png",position:new o(0,0),width:288,height:512,canvasPosition:new o(288,0),canvasWidth:288,canvasHeight:512,speed:0},indexStart:0},listOfPipesInfo:{numberOfPipes:4,pipeInfo:{pathUp:"../../assets/images/pipe-green.png",pathDown:"../../assets/images/pipe-green-down.png",position:new h,width:52,height:320,canvasPosition:new h(new o(d(800,820),d(-100,-200))),canvasWidth:52,canvasHeight:320,speed:200,space:70},indexStart:1},birdInfo:{path:"../../assets/images/yellowbird-midflap.png",position:new h,width:34,height:24,canvasWidth:34,canvasHeight:24,speed:0,jumpSpeed:100},messageInfo:{path:"../assets/images/message.png",position:new h,width:184,height:267,canvasWidth:184,canvasHeight:267,speed:0,dY:80},gameOverMessageInfo:{path:"../../assets/images/sprite.png",position:new h(new o(194,231)),width:184,height:33,canvasWidth:243.1,canvasHeight:42.9,speed:0,dY:50},boardInfo:{path:"../../assets/images/sprite.png",position:new h(new o(175,272)),width:225,height:116,canvasWidth:292.5,canvasHeight:150.8,speed:0,dY:-3},buttonInfo:{path:"../../assets/images/sprite.png",position:new h(new o(246,400)),width:82,height:28,canvasWidth:123,canvasHeight:45,speed:0,dY:70}},c=class{constructor(t,e,s){this.position=t,this.width=e,this.height=s}getPosition(){return this.position}getWidth(){return this.width}getHeight(){return this.height}setPosition(t){this.position=t}setWidth(t){this.width=t}setHeight(t){this.height=t}draw(t){t.strokeStyle="black",t.strokeRect(this.position.getX(),this.position.getY(),this.width,this.height)}isColliding(t){const e=this.position.getX(),s=this.position.getX()+this.width,i=this.position.getY(),n=this.position.getY()+this.height,a=t.getPosition().getX(),r=t.getPosition().getX()+t.getWidth(),o=t.getPosition().getY(),h=t.getPosition().getY()+t.getHeight();return s>=a&&e<=r&&n>=o&&i<=h}},l=class{constructor(t,e){this.getMass=()=>this.mass,this.getGravity=()=>this.gravity,this.getForce=()=>this.getMass()*this.getGravity(),this.getAcceleration=()=>this.getForce()/this.getMass(),this.destroy=()=>{this.mass=0,this.gravity=0},this.mass=t,this.gravity=e}},u=class{constructor(){this.fps=60,this.currentFrameIndex=0,this.lastFrameTime=0,this.listOfImages=[]}getFps(){return this.fps}setFps(t){this.fps=t}addImage(t){this.listOfImages.push(t)}getImage(){return this.listOfImages[this.currentFrameIndex]}playAnimation(){const t=1e3/this.fps;requestAnimationFrame((e=>{e-this.lastFrameTime>=t&&(this.currentFrameIndex=(this.currentFrameIndex+1)%this.listOfImages.length,this.lastFrameTime=e)}))}},f=class{constructor(t,e,s,i,n,a,r,o=!1){this.path=t,this.transform=e,this.width=s,this.height=i,this.canvasTransform=n,this.canvasWidth=a,this.canvasHeight=r,this.isStatic=!1,this.isActive=!1,this.layer=0,this.path=t,this.transform=e,this.width=s*this.transform.getScale().getX(),this.height=i*this.transform.getScale().getY(),this.canvasTransform=n,this.canvasWidth=a*this.transform.getScale().getX(),this.canvasHeight=r*this.transform.getScale().getY(),this.isStatic=o,this.isStatic&&this.addToCurrentScene()}addToCurrentScene(){i.getInstance().getCurrentScene().addGameObject(this)}getImage(){const t=new Image;return t.src=this.path,t}getTransform(){return this.transform}getCanvasTransform(){return this.canvasTransform}getWidth(){return this.width}getHeight(){return this.height}getCanvasWidth(){return this.canvasWidth}getCanvasHeight(){return this.canvasHeight}getLayer(){return this.layer}getIsStatic(){return this.isStatic}getIsActive(){return this.isActive}getPath(){return this.path}getPosition(){return this.transform.getPosition()}getCanvasPosition(){return this.canvasTransform.getPosition()}setLayer(t){this.layer=t}setIsStatic(t){this.isStatic=t}setActive(t){this.isActive=t}setScale(t){this.transform.setScale(t),this.width=this.width*this.transform.getScale().getX(),this.height=this.height*this.transform.getScale().getY()}setPath(t){this.path=t}setWidth(t){this.width=t}setHeight(t){this.height=t}setCanvasWidth(t){this.canvasWidth=t}setCanvasHeight(t){this.canvasHeight=t}setPosition(t){this.transform.setPosition(t)}setCanvasPosition(t){this.canvasTransform.setPosition(t)}setImage(t){this.image=t}},m=class extends f{constructor(){super(...arguments),this.view=new t("canvas")}draw(){this.collider&&this.collider.draw(this.view.getCtx()),this.view.getCtx().drawImage(this.image,this.getPosition().getX(),this.getPosition().getY(),this.getWidth(),this.getHeight(),this.getCanvasPosition().getX(),this.getCanvasPosition().getY(),this.getCanvasWidth(),this.getCanvasHeight())}start(){this.image=new Image,this.image.src=this.getPath()}update(t){}destroy(){}};var p;!function(t){t.START="START",t.PLAYING="PLAYING",t.GAMEOVER="GAMEOVER"}(p||(p={}));const v=p,O=class extends m{constructor(t,e,s,i,n,r,o,h,d){super(t,e,s,i,n,r,o,!0),this.speed=h,this.jumpSpeed=d,this.mouseEvent=new a("canvas"),this.sprite=new u,this.rigid=new l(1,9.8),this.collider=new c(this.getCanvasPosition(),this.getCanvasWidth(),this.getCanvasHeight()),this.initSpriteAnimation()}setGameState(t){this.gameState=t}setSpeed(t){this.speed=t}setJumpSpeed(t){this.jumpSpeed=t}initSpriteAnimation(){["../../assets/images/yellowbird-downflap.png","../../assets/images/yellowbird-midflap.png","../../assets/images/yellowbird-upflap.png"].forEach((t=>{const e=new Image;e.src=t,this.sprite.addImage(e)})),this.sprite.setFps(10)}update(t){if(this.sprite.playAnimation(),this.setImage(this.sprite.getImage()),this.gameState===v.PLAYING){if(this.rigid){const e=this.getCanvasPosition().Down();this.speed+=this.rigid.getGravity(),this.setCanvasPosition(this.getCanvasPosition().add(e.multiplyScalar(t*this.speed))),this.collider.setPosition(this.getCanvasPosition())}if(this.mouseEvent.isMousePressed()){const e=this.getCanvasPosition().Up();this.setCanvasPosition(this.getCanvasPosition().add(e.multiplyScalar(t*this.jumpSpeed))),this.speed=-this.jumpSpeed,this.collider.setPosition(this.getCanvasPosition())}}}destroy(){this.speed=0,this.jumpSpeed=0,this.rigid.destroy()}},b=class{constructor(t){this.bird=new O(g.birdInfo.path,g.birdInfo.position,g.birdInfo.width,g.birdInfo.height,new h(new o(t.getCanvas().width/4,(t.getCanvas().height-g.birdInfo.height)/2)),g.birdInfo.canvasWidth,g.birdInfo.canvasHeight,g.birdInfo.speed,g.birdInfo.jumpSpeed)}build(){return this.bird}addToScene(t){t.addGameObject(this.bird)}},I=class extends m{},w=class{constructor(){this.background=new I(g.listOfBackgroundsInfo.backgroundInfo.path,new h(new o(g.listOfBackgroundsInfo.backgroundInfo.position.getX(),g.listOfBackgroundsInfo.backgroundInfo.position.getY())),g.listOfBackgroundsInfo.backgroundInfo.width,g.listOfBackgroundsInfo.backgroundInfo.height,new h(new o(g.listOfBackgroundsInfo.backgroundInfo.canvasPosition.getX(),g.listOfBackgroundsInfo.backgroundInfo.canvasPosition.getY())),g.listOfBackgroundsInfo.backgroundInfo.canvasWidth,g.listOfBackgroundsInfo.backgroundInfo.canvasHeight,!0)}build(){return this.background}},S=class{constructor(t,e,s,i,n){this.listOfGameObjects=[];for(let a=s;a<t;a++){let t=new h(new o(a*n.getX(),n.getY())),s=new i(e.getPath(),e.getTransform(),e.getWidth(),e.getHeight(),t,e.getCanvasWidth(),e.getCanvasHeight(),e.getIsStatic());this.listOfGameObjects.push(s)}}getListOfGameObjects(){return this.listOfGameObjects}setListOfGameObjects(t){this.listOfGameObjects=t}setAllLayer(t){this.listOfGameObjects.forEach((e=>e.setLayer(t)))}setAllActive(t){this.listOfGameObjects.forEach((e=>e.setActive(t)))}draw(t){}},G=class extends S{update(t){}},C=class{constructor(){const t=new w;this.listOfBackgrounds=new G(g.listOfBackgroundsInfo.numberOfBackgrounds,t.build(),g.listOfBackgroundsInfo.indexStart,I,new o(g.listOfBackgroundsInfo.backgroundInfo.canvasWidth,g.listOfBackgroundsInfo.backgroundInfo.canvasPosition.getY()))}build(){return this.listOfBackgrounds}},P=class extends m{constructor(t,e,s,i,n,r,o){super(t,e,s,i,n,r,o,!0),this.isClicked=!1,this.mouseEventHandler=new a("canvas"),this.mouseEventHandler.addObserver(this)}getIsClicked(){return this.isClicked}setIsClicked(t){this.isClicked=t}onMouseDown(t){this.checkClickButton(t)&&(this.isClicked=!0,console.log(`Button clicked at (${t.clientX}, ${t.clientY})`))}onMouseUp(t){this.isClicked=!1}checkClickButton(t){return t.clientX<=this.getCanvasPosition().getX()+this.getCanvasWidth()&&t.clientX>=this.getCanvasPosition().getX()&&t.clientY<=this.getCanvasPosition().getY()+this.getCanvasHeight()&&t.clientY>=this.getCanvasPosition().getY()}},M=class{constructor(t){this.button=new P(g.buttonInfo.path,g.buttonInfo.position,g.buttonInfo.width,g.buttonInfo.height,new h(new o((t.getCanvas().width-g.buttonInfo.canvasWidth)/2,(t.getCanvas().height+g.buttonInfo.canvasHeight+g.buttonInfo.dY)/2)),g.buttonInfo.canvasWidth,g.buttonInfo.canvasHeight)}build(){return this.button}addToScene(t){t.addGameObject(this.button)}},B=class extends m{},y=class{constructor(t){this.message=new B(g.messageInfo.path,g.messageInfo.position,g.messageInfo.width,g.messageInfo.height,new h(new o((t.getCanvas().width-g.messageInfo.canvasWidth)/2,(t.getCanvas().height-g.messageInfo.canvasHeight-g.messageInfo.dY)/2)),g.messageInfo.canvasWidth,g.messageInfo.canvasHeight,!0)}build(){return this.message}addToScene(t){t.addGameObject(this.message)}},j=class extends m{},L=class{constructor(t){this.gameOverMessage=new j(g.gameOverMessageInfo.path,g.gameOverMessageInfo.position,g.gameOverMessageInfo.width,g.gameOverMessageInfo.height,new h(new o((t.getCanvas().width-g.gameOverMessageInfo.canvasWidth)/2,g.gameOverMessageInfo.canvasHeight+g.gameOverMessageInfo.dY)),g.gameOverMessageInfo.canvasWidth,g.gameOverMessageInfo.canvasHeight,!0)}build(){return this.gameOverMessage}addToScene(t){t.addGameObject(this.gameOverMessage)}},k=class extends m{constructor(){super(...arguments),this.speed=0,this.collider=new c(this.getCanvasPosition(),this.getCanvasWidth(),this.getCanvasHeight())}setSpeed(t){this.speed=t}getSpeed(){return this.speed}update(t){const e=this.getCanvasPosition().Left();this.setCanvasPosition(this.getCanvasPosition().add(e.multiplyScalar(t*this.speed))),this.collider.setPosition(this.getCanvasPosition())}destroy(){this.speed=0}},H=class extends S{setAllSpeed(t){this.listOfGameObjects.forEach((e=>e.setSpeed(t)))}findLastGround(t){for(let e=t.listOfGameObjects.length-1;e>=0;e--)if(t.listOfGameObjects[e]instanceof k)return e;return 0}findFirstGround(t){for(let e=0;e<t.listOfGameObjects.length;e++)if(t.listOfGameObjects[e]instanceof k)return e;return 0}update(t){const e=this.findLastGround(i.getInstance().getCurrentScene()),s=this.findFirstGround(i.getInstance().getCurrentScene()),n=i.getInstance().getCurrentScene().listOfGameObjects[s],a=i.getInstance().getCurrentScene().listOfGameObjects[e];if(n.getCanvasPosition().getX()+n.getCanvasWidth()<=0){this.listOfGameObjects.splice(0,1);const t=new k(n.getPath(),n.getTransform(),n.getWidth(),n.getHeight(),new h(new o(a.getCanvasPosition().getX()+n.getCanvasWidth(),510-n.getCanvasHeight())),n.getCanvasWidth(),n.getCanvasHeight());t.setSpeed(n.getSpeed()),t.setLayer(n.getLayer()),this.listOfGameObjects.push(t),i.getInstance().getCurrentScene().addGameObject(t),i.getInstance().getCurrentScene().removeGameObject(n)}}destroy(){this.listOfGameObjects.forEach((t=>t.destroy()))}},A=class{constructor(){this.listOfGrounds=new H(g.listOfGroundsInfo.numberOfGrounds,new k(g.listOfGroundsInfo.groundInfo.path,g.listOfGroundsInfo.groundInfo.position,g.listOfGroundsInfo.groundInfo.width,g.listOfGroundsInfo.groundInfo.height,g.listOfGroundsInfo.groundInfo.canvasPosition,g.listOfGroundsInfo.groundInfo.canvasWidth,g.listOfGroundsInfo.groundInfo.canvasHeight),g.listOfGroundsInfo.indexStart,k,new o(g.listOfGroundsInfo.groundInfo.canvasWidth,g.listOfGroundsInfo.groundInfo.canvasPosition.getPosition().getY())),this.listOfGrounds.setAllSpeed(g.listOfGroundsInfo.groundInfo.speed)}build(){return this.listOfGrounds}addToScene(t){t.addListOfGameObjects(this.listOfGrounds.getListOfGameObjects())}},x=class extends m{},W=class{constructor(t){this.board=this.board=new x(g.boardInfo.path,g.boardInfo.position,g.boardInfo.width,g.boardInfo.height,new h(new o((t.getCanvas().width-g.boardInfo.canvasWidth)/2,g.boardInfo.canvasHeight+g.boardInfo.dY)),g.boardInfo.canvasWidth,g.boardInfo.canvasHeight,!0)}build(){return this.board}addToScene(t){t.addGameObject(this.board)}},T=class extends m{constructor(){super(...arguments),this.speed=0,this.collider=new c(this.getCanvasPosition(),this.getCanvasWidth(),this.getCanvasHeight())}setSpeed(t){this.speed=t}getSpeed(){return this.speed}update(t){const e=this.getCanvasPosition().Left();this.setCanvasPosition(this.getCanvasPosition().add(e.multiplyScalar(t*this.speed))),this.collider.setPosition(this.getCanvasPosition())}destroy(){this.speed=0}},Y=class extends S{constructor(t,e,s,i,n,a,r){super(t,e,s,i,n),this.isDestroyed=!1;for(let d=s;d<t;d++){let t=new h(new o(d*n.getX(),n.getY()+e.getHeight()+a)),s=new i(r,e.getTransform(),e.getWidth(),e.getHeight(),t,e.getCanvasWidth(),e.getCanvasHeight());this.listOfGameObjects.push(s)}this.sortCanvasPosition()}sortCanvasPosition(){this.listOfGameObjects.sort(((t,e)=>t.getCanvasPosition().getX()-e.getCanvasPosition().getX()))}getIsDestroyed(){return this.isDestroyed}setIsDestroyed(t){this.isDestroyed=t}setAllSpeed(t){this.listOfGameObjects.forEach((e=>e.setSpeed(t)))}findFirstPipes(t){for(let e=0;e<t.listOfGameObjects.length;e++)if(t.listOfGameObjects[e]instanceof T)return e;return 0}findLastPipes(t){for(let e=t.listOfGameObjects.length-1;e>=0;e--)if(t.listOfGameObjects[e]instanceof T)return e;return 0}update(t){const e=this.findFirstPipes(i.getInstance().getCurrentScene()),s=this.findLastPipes(i.getInstance().getCurrentScene()),n=i.getInstance().getCurrentScene().listOfGameObjects[e],a=i.getInstance().getCurrentScene().listOfGameObjects[e+1],r=i.getInstance().getCurrentScene().listOfGameObjects[s-1],g=i.getInstance().getCurrentScene().listOfGameObjects[s];if(n.getCanvasPosition().getX()<=-n.getCanvasWidth()){this.listOfGameObjects.splice(0,2),this.isDestroyed=!0;const t=new T(n.getPath(),n.getTransform(),n.getWidth(),n.getHeight(),new h(new o(g.getCanvasPosition().getX()+d(500,600),d(-200,-100))),n.getCanvasWidth(),n.getCanvasHeight());t.setSpeed(n.getSpeed()),t.setLayer(n.getLayer()),t.setActive(n.getIsActive());const e=new T(a.getPath(),a.getTransform(),a.getWidth(),a.getHeight(),new h(new o(t.getCanvasPosition().getX(),t.getCanvasPosition().getY()+t.getCanvasHeight()+d(50,70))),a.getCanvasWidth(),a.getCanvasHeight());e.setSpeed(r.getSpeed()),e.setLayer(r.getLayer()),e.setActive(r.getIsActive()),this.listOfGameObjects.push(t),this.listOfGameObjects.push(e),i.getInstance().getCurrentScene().addGameObject(t),i.getInstance().getCurrentScene().addGameObject(e),i.getInstance().getCurrentScene().removeGameObject(n),i.getInstance().getCurrentScene().removeGameObject(a)}}},E=class{constructor(){this.listOfPipes=new Y(g.listOfPipesInfo.numberOfPipes,new T(g.listOfPipesInfo.pipeInfo.pathDown,g.listOfPipesInfo.pipeInfo.position,g.listOfPipesInfo.pipeInfo.width,g.listOfPipesInfo.pipeInfo.height,g.listOfPipesInfo.pipeInfo.canvasPosition,g.listOfPipesInfo.pipeInfo.canvasWidth,g.listOfPipesInfo.pipeInfo.canvasHeight),g.listOfPipesInfo.indexStart,T,g.listOfPipesInfo.pipeInfo.canvasPosition.getPosition(),g.listOfPipesInfo.pipeInfo.space,g.listOfPipesInfo.pipeInfo.pathUp),this.listOfPipes.setAllSpeed(g.listOfPipesInfo.pipeInfo.speed)}build(){return this.listOfPipes}addToScene(t){t.addListOfGameObjects(this.listOfPipes.getListOfGameObjects())}},X=class extends f{start(){}draw(){}update(t){this.gameManager.update(t)}destroy(){}setGameManager(t){this.gameManager=t}addToScene(t){t.addGameObject(this)}},R=class{constructor(t){this.gameManager=t}handleInputEvent(){}update(t){const e=this.gameManager.getMouseEventHandler().isMousePressed();this.gameManager.getMessageBuilder().build().setLayer(2),this.gameManager.getListOfGroundsBuilder().build().setAllSpeed(0),this.gameManager.getListOfPipesBuilder().build().setAllSpeed(0),e&&(this.gameManager.getScene().removeGameObject(this.gameManager.getMessageBuilder().build()),this.gameManager.setGameState(v.PLAYING),this.gameManager.getBirdBuilder().build().setGameState(v.PLAYING))}},D=class{constructor(t){this.gameManager=t}handleInputEvent(){}update(t){this.gameManager.getListOfPipesBuilder().build().setAllLayer(1),this.gameManager.getListOfGroundsBuilder().build().setAllSpeed(g.listOfGroundsInfo.groundInfo.speed),this.gameManager.getListOfPipesBuilder().build().setAllSpeed(g.listOfPipesInfo.pipeInfo.speed),this.checkCollision()?(this.gameManager.setGameState(v.GAMEOVER),this.gameManager.getBirdBuilder().build().setGameState(v.GAMEOVER),this.gameManager.getListOfGroundsBuilder().build().setAllSpeed(0),this.gameManager.getListOfPipesBuilder().build().setAllSpeed(0)):(this.gameManager.getListOfGroundsBuilder().build().update(t),this.gameManager.getListOfPipesBuilder().build().update(t))}checkCollision(){const{listOfGameObjects:t}=this.gameManager.getScene();for(let e=0;e<t.length-1;e++){const s=t[e];for(let i=e+1;i<t.length;i++){const e=t[i];if(s instanceof O&&e instanceof k){if(s.collider.isColliding(e.collider))return!0}else if(s instanceof k&&e instanceof O&&s.collider.isColliding(e.collider))return!0;if(s instanceof O&&e instanceof T){if(s.collider.isColliding(e.collider))return!0}else if(s instanceof T&&e instanceof O&&s.collider.isColliding(e.collider))return!0}}return!1}},F=class{constructor(t){this.gameManager=t}handleInputEvent(){}update(t){const e=this.gameManager.getMouseEventHandler().isMousePressed();this.gameManager.getGameOverMessageBuilder().build().setLayer(5),this.gameManager.getBoardBuilder().build().setLayer(5),this.gameManager.getButtonBuilder().build().setLayer(5),e&&this.gameManager.getButtonBuilder().build().getIsClicked()&&(this.gameManager.setGameState(v.PLAYING),this.gameManager.getBirdBuilder().build().setGameState(v.PLAYING),this.gameManager.reload(),this.gameManager.getButtonBuilder().build().setIsClicked(!1))}},U=class{constructor(){this.view=new t("canvas"),this.mouseEvent=new a("canvas"),this.init=()=>{this.scene=new e,i.getInstance().addScene("game",this.scene),i.getInstance().setCurrentScene("game"),this.createObject(),this.currentState=new R(this)},this.engine=new n(this.view.getCtx(),this.view.getCanvas()),this.init()}createObject(){this.birdBuilder=new b(this.view),this.listOfBackgroundsBuilder=new C,this.buttonBuilder=new M(this.view),this.messageBuilder=new y(this.view),this.gameOverMessageBuilder=new L(this.view),this.boardBuilder=new W(this.view),this.listOfPipesBuilder=new E,this.listOfGroundsBuilder=new A,this.middleGameObject=new X("",new h,0,0,new h,0,0),this.middleGameObject.setGameManager(this),this.listOfGroundsBuilder.addToScene(this.scene),this.listOfPipesBuilder.addToScene(this.scene),this.middleGameObject.addToScene(this.scene),this.birdBuilder.build().setLayer(2),this.listOfBackgroundsBuilder.build().setAllLayer(0),this.buttonBuilder.build().setLayer(-2),this.messageBuilder.build().setLayer(-2),this.gameOverMessageBuilder.build().setLayer(-2),this.listOfGroundsBuilder.build().setAllLayer(2),this.boardBuilder.build().setLayer(-2),this.listOfPipesBuilder.build().setAllLayer(-1)}reload(){i.getInstance().getCurrentScene().deleteScene(),this.createObject(),this.getBirdBuilder().build().setGameState(v.PLAYING),this.currentState=new D(this)}setGameState(t){switch(t){case v.START:this.currentState=new R(this);break;case v.PLAYING:this.currentState=new D(this);break;case v.GAMEOVER:this.currentState=new F(this)}}update(t){this.currentState.update(t)}getScene(){return this.scene}getMouseEventHandler(){return this.mouseEvent}getCanvasView(){return this.view}getBirdBuilder(){return this.birdBuilder}getListOfBackgroundsBuilder(){return this.listOfBackgroundsBuilder}getButtonBuilder(){return this.buttonBuilder}getMessageBuilder(){return this.messageBuilder}getGameOverMessageBuilder(){return this.gameOverMessageBuilder}getListOfGroundsBuilder(){return this.listOfGroundsBuilder}getBoardBuilder(){return this.boardBuilder}getListOfPipesBuilder(){return this.listOfPipesBuilder}};new class{constructor(){this.createCanvas(),new U}createCanvas(){const t=document.createElement("canvas");t.setAttribute("id","canvas"),t.height=510,t.width=800,t.style.background="white",document.body.appendChild(t)}}})();